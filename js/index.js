// Generated by psc-bundle 0.10.1
var PS = {};
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["Semigroupoid"] = Semigroupoid;
  exports["compose"] = compose;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (__superclass_Control$dotSemigroupoid$dotSemigroupoid_0, id) {
      this["__superclass_Control.Semigroupoid.Semigroupoid_0"] = __superclass_Control$dotSemigroupoid$dotSemigroupoid_0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Category = PS["Control.Category"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
  exports["flip"] = flip;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
    "use strict";

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Show"];     
  var Show = function (show) {
      this.show = show;
  };                                                 
  var showNumber = new Show($foreign.showNumberImpl);
  var show = function (dict) {
      return dict.show;
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["showNumber"] = showNumber;
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };                                                                                             
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
    "use strict";

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  };                                                         
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupArray"] = semigroupArray;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Data_Functor = PS["Data.Functor"];
  var Data_Semigroup = PS["Data.Semigroup"];        
  var Alt = function (__superclass_Data$dotFunctor$dotFunctor_0, alt) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.alt = alt;
  };
  var altArray = new Alt(function () {
      return Data_Functor.functorArray;
  }, Data_Semigroup.append(Data_Semigroup.semigroupArray));
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
  exports["altArray"] = altArray;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
    "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var result = [];
      var n = 0;
      for (var i = 0, l = fs.length; i < l; i++) {
        for (var j = 0, k = xs.length; j < k; j++) {
          result[n++] = fs[i](xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Apply = function (__superclass_Data$dotFunctor$dotFunctor_0, apply) {
      this["__superclass_Data.Functor.Functor_0"] = __superclass_Data$dotFunctor$dotFunctor_0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applyArray"] = applyArray;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (__superclass_Control$dotApply$dotApply_0, pure) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative["__superclass_Control.Apply.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  }; 
  var applicativeArray = new Applicative(function () {
      return Control_Apply.applyArray;
  }, function (x) {
      return [ x ];
  });
  exports["Applicative"] = Applicative;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["applicativeArray"] = applicativeArray;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Data_Functor = PS["Data.Functor"];        
  var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
      this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
      this.empty = empty;
  };
  var plusArray = new Plus(function () {
      return Control_Alt.altArray;
  }, [  ]);
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
  exports["plusArray"] = plusArray;
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];        
  var Alternative = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotPlus$dotPlus_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
  };
  var alternativeArray = new Alternative(function () {
      return Control_Applicative.applicativeArray;
  }, function () {
      return Control_Plus.plusArray;
  });
  exports["Alternative"] = Alternative;
  exports["alternativeArray"] = alternativeArray;
})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
    "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Bind = function (__superclass_Control$dotApply$dotApply_0, bind) {
      this["__superclass_Control.Apply.Apply_0"] = __superclass_Control$dotApply$dotApply_0;
      this.bind = bind;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindArray"] = bindArray;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (__superclass_Control$dotApplicative$dotApplicative_0, __superclass_Control$dotBind$dotBind_1) {
      this["__superclass_Control.Applicative.Applicative_0"] = __superclass_Control$dotApplicative$dotApplicative_0;
      this["__superclass_Control.Bind.Bind_1"] = __superclass_Control$dotBind$dotBind_1;
  }; 
  var monadArray = new Monad(function () {
      return Control_Applicative.applicativeArray;
  }, function () {
      return Control_Bind.bindArray;
  });
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(f)(function (v) {
                  return Control_Bind.bind(dictMonad["__superclass_Control.Bind.Bind_1"]())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad["__superclass_Control.Applicative.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
  exports["monadArray"] = monadArray;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var MonadZero = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Control$dotMonad$dotMonad_0) {
      this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
      this["__superclass_Control.Monad.Monad_0"] = __superclass_Control$dotMonad$dotMonad_0;
  };
  var monadZeroArray = new MonadZero(function () {
      return Control_Alternative.alternativeArray;
  }, function () {
      return Control_Monad.monadArray;
  });
  var guard = function (dictMonadZero) {
      return function (v) {
          if (v) {
              return Control_Applicative.pure((dictMonadZero["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Applicative.Applicative_0"]())(Data_Unit.unit);
          };
          if (!v) {
              return Control_Plus.empty((dictMonadZero["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
          };
          throw new Error("Failed pattern match at Control.MonadZero line 52, column 1 - line 52, column 23: " + [ v.constructor.name ]);
      };
  };
  exports["MonadZero"] = MonadZero;
  exports["guard"] = guard;
  exports["monadZeroArray"] = monadZeroArray;
})(PS["Control.MonadZero"] = PS["Control.MonadZero"] || {});
(function(exports) {
    "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = [];
      for (var i = start, n = 0; i !== end; i += step) {
        result[n++] = i;
      }
      result[n] = i;
      return result;
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["mempty"] = mempty;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var maybe$prime = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v(Data_Unit.unit);
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 227, column 1 - line 227, column 28: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };                                                                                                    
  var fromMaybe$prime = function (a) {
      return maybe$prime(a)(Control_Category.id(Control_Category.categoryFn));
  };
  exports["Just"] = Just;
  exports["Nothing"] = Nothing;
  exports["fromMaybe'"] = fromMaybe$prime;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return function (xs) {
                  return foldr(dictFoldable)(function (x) {
                      return function (acc) {
                          return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(dictMonoid))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  exports["Foldable"] = Foldable;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
    "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS["Partial"] = PS["Partial"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Partial.Unsafe"];
  var Partial = PS["Partial"];        
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith(dictPartial)(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Function = PS["Data.Function"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];
  exports["range"] = $foreign.range;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
    "use strict";

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
    "use strict";

  // module Math

  exports.abs = Math.abs;  

  exports.cos = Math.cos;    

  exports.sin = Math.sin;      

  exports.pi = Math.PI;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Math"];
  exports["abs"] = $foreign.abs;
  exports["cos"] = $foreign.cos;
  exports["pi"] = $foreign.pi;
  exports["sin"] = $foreign.sin;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Data.Int"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_BooleanAlgebra = PS["Data.BooleanAlgebra"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var $$Math = PS["Math"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var semigroupList = new Data_Semigroup.Semigroup(function (v) {
      return function (ys) {
          if (v instanceof Nil) {
              return ys;
          };
          if (v instanceof Cons) {
              return new Cons(v.value0, Data_Semigroup.append(semigroupList)(v.value1)(ys));
          };
          throw new Error("Failed pattern match at Data.List.Types line 54, column 3 - line 54, column 21: " + [ v.constructor.name, ys.constructor.name ]);
      };
  });
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($143) {
                  return Data_Semigroup.append(dictMonoid["__superclass_Data.Semigroup.Semigroup_0"]())(acc)(f($143));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function (__copy_b) {
          return function (__copy_v) {
              var b = __copy_b;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Nil) {
                      return b;
                  };
                  if (v instanceof Cons) {
                      var __tco_b = f(b)(v.value0);
                      var __tco_v = v.value1;
                      b = __tco_b;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List.Types line 68, column 3 - line 71, column 34: " + [ b.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          return function (as) {
              var rev = function (__copy_acc) {
                  return function (__copy_v) {
                      var acc = __copy_acc;
                      var v = __copy_v;
                      tco: while (true) {
                          if (v instanceof Nil) {
                              return acc;
                          };
                          if (v instanceof Cons) {
                              var __tco_acc = new Cons(v.value0, acc);
                              var __tco_v = v.value1;
                              acc = __tco_acc;
                              v = __tco_v;
                              continue tco;
                          };
                          throw new Error("Failed pattern match at Data.List.Types line 64, column 3 - line 67, column 40: " + [ acc.constructor.name, v.constructor.name ]);
                      };
                  };
              };
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev(Nil.value)(as));
          };
      };
  });                                                                     
  var functorList = new Data_Functor.Functor(function (f) {
      return Data_Foldable.foldr(foldableList)(function (x) {
          return function (acc) {
              return new Cons(f(x), acc);
          };
      })(Nil.value);
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 88, column 3 - line 88, column 20: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindList = new Control_Bind.Bind(function () {
      return applyList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types line 95, column 3 - line 95, column 19: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;
  exports["bindList"] = bindList;
})(PS["Data.List.Types"] = PS["Data.List.Types"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List_Types = PS["Data.List.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Control_Category = PS["Control.Category"];
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };
  exports["fromFoldable"] = fromFoldable;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
      return function() {
          var el = document.getElementById(id);
          if (el && el instanceof HTMLCanvasElement) {
              return Just(el);
          } else {
              return Nothing;
          }
      };
  };

  exports.getContext2D = function(c) {
      return function() {
          return c.getContext('2d');
      };
  };

  exports.setFillStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.fillStyle = style;
              return ctx;
          };
      };
  };

  exports.beginPath = function(ctx) {
      return function() {
          ctx.beginPath();
          return ctx;
      };
  };

  exports.fill = function(ctx) {
      return function() {
          ctx.fill();
          return ctx;
      };
  };

  exports.lineTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.lineTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.moveTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.moveTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.closePath = function(ctx) {
      return function() {
          ctx.closePath();
          return ctx;
      };
  };

  exports.clearRect = function(ctx) {
      return function(r) {
          return function() {
              ctx.clearRect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by psc version 0.10.1
  "use strict";
  var $foreign = PS["Graphics.Canvas"];
  var Prelude = PS["Prelude"];
  var Data_ArrayBuffer_Types = PS["Data.ArrayBuffer.Types"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception_Unsafe = PS["Control.Monad.Eff.Exception.Unsafe"];
  var Data_Show = PS["Data.Show"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Functor = PS["Data.Functor"];
  var getCanvasElementById = function (elId) {
      return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
  };
  exports["getCanvasElementById"] = getCanvasElementById;
  exports["beginPath"] = $foreign.beginPath;
  exports["clearRect"] = $foreign.clearRect;
  exports["closePath"] = $foreign.closePath;
  exports["fill"] = $foreign.fill;
  exports["getContext2D"] = $foreign.getContext2D;
  exports["lineTo"] = $foreign.lineTo;
  exports["moveTo"] = $foreign.moveTo;
  exports["setFillStyle"] = $foreign.setFillStyle;
})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  exports.atFps = function (v) {
      return function (f) {
	  return function() {
	      window.setInterval(function() {
		  f(new Date().getTime() / 1000.0)(); }, 1000.0/v);
	  };
      };
  }
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
    "use strict";
  var $foreign = PS["Main"];
  var Prelude = PS["Prelude"];
  var $$Math = PS["Math"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Data_Array = PS["Data.Array"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Semiring = PS["Data.Semiring"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_Ring = PS["Data.Ring"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_List_Types = PS["Data.List.Types"];
  var Control_Applicative = PS["Control.Applicative"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var Front = (function () {
      function Front() {

      };
      Front.value = new Front();
      return Front;
  })();
  var Back = (function () {
      function Back() {

      };
      Back.value = new Back();
      return Back;
  })();
  var Split = (function () {
      function Split(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Split.create = function (value0) {
          return function (value1) {
              return new Split(value0, value1);
          };
      };
      return Split;
  })();
  var XY = (function () {
      function XY(value0) {
          this.value0 = value0;
      };
      XY.create = function (value0) {
          return new XY(value0);
      };
      return XY;
  })();
  var YZ = (function () {
      function YZ(value0) {
          this.value0 = value0;
      };
      YZ.create = function (value0) {
          return new YZ(value0);
      };
      return YZ;
  })();
  var ZX = (function () {
      function ZX(value0) {
          this.value0 = value0;
      };
      ZX.create = function (value0) {
          return new ZX(value0);
      };
      return ZX;
  })();
  var toPoints = function (v) {
      if (v instanceof XY) {
          return [ {
              x: v.value0.x.min, 
              y: v.value0.y.min, 
              z: v.value0.z
          }, {
              x: v.value0.x.min, 
              y: v.value0.y.max, 
              z: v.value0.z
          }, {
              x: v.value0.x.max, 
              y: v.value0.y.max, 
              z: v.value0.z
          }, {
              x: v.value0.x.max, 
              y: v.value0.y.min, 
              z: v.value0.z
          } ];
      };
      if (v instanceof YZ) {
          return [ {
              x: v.value0.x, 
              y: v.value0.y.min, 
              z: v.value0.z.min
          }, {
              x: v.value0.x, 
              y: v.value0.y.min, 
              z: v.value0.z.max
          }, {
              x: v.value0.x, 
              y: v.value0.y.max, 
              z: v.value0.z.max
          }, {
              x: v.value0.x, 
              y: v.value0.y.max, 
              z: v.value0.z.min
          } ];
      };
      if (v instanceof ZX) {
          return [ {
              x: v.value0.x.min, 
              y: v.value0.y, 
              z: v.value0.z.min
          }, {
              x: v.value0.x.min, 
              y: v.value0.y, 
              z: v.value0.z.max
          }, {
              x: v.value0.x.max, 
              y: v.value0.y, 
              z: v.value0.z.max
          }, {
              x: v.value0.x.max, 
              y: v.value0.y, 
              z: v.value0.z.min
          } ];
      };
      throw new Error("Failed pattern match at Main line 79, column 1 - line 83, column 20: " + [ v.constructor.name ]);
  };
  var functorSplit = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Front) {
              return Front.value;
          };
          if (v1 instanceof Back) {
              return Back.value;
          };
          if (v1 instanceof Split) {
              return new Split(v(v1.value0), v(v1.value1));
          };
          throw new Error("Failed pattern match at Main line 23, column 3 - line 23, column 22: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var cube = function (x0) {
      return function (x1) {
          return function (y0) {
              return function (y1) {
                  return function (z0) {
                      return function (z1) {
                          return function (a) {
                              return [ new XY({
                                  x: {
                                      min: x0, 
                                      max: x1
                                  }, 
                                  y: {
                                      min: y0, 
                                      max: y1
                                  }, 
                                  z: z0, 
                                  a: a
                              }), new XY({
                                  x: {
                                      min: x0, 
                                      max: x1
                                  }, 
                                  y: {
                                      min: y0, 
                                      max: y1
                                  }, 
                                  z: z1, 
                                  a: a
                              }), new YZ({
                                  x: x0, 
                                  y: {
                                      min: y0, 
                                      max: y1
                                  }, 
                                  z: {
                                      min: z0, 
                                      max: z1
                                  }, 
                                  a: a
                              }), new YZ({
                                  x: x1, 
                                  y: {
                                      min: y0, 
                                      max: y1
                                  }, 
                                  z: {
                                      min: z0, 
                                      max: z1
                                  }, 
                                  a: a
                              }), new ZX({
                                  x: {
                                      min: x0, 
                                      max: x1
                                  }, 
                                  y: y0, 
                                  z: {
                                      min: z0, 
                                      max: z1
                                  }, 
                                  a: a
                              }), new ZX({
                                  x: {
                                      min: x0, 
                                      max: x1
                                  }, 
                                  y: y1, 
                                  z: {
                                      min: z0, 
                                      max: z1
                                  }, 
                                  a: a
                              }) ];
                          };
                      };
                  };
              };
          };
      };
  };
  var scene = function (t) {
      var s = $$Math.sin(0.25 * t) * 8.0 + 40.0;
      return Control_Bind.bind(Control_Bind.bindArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Int.toNumber)(Data_Array.range(-3)(3)))(function (v) {
          return Control_Bind.bind(Control_Bind.bindArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Int.toNumber)(Data_Array.range(-3)(3)))(function (v1) {
              return Control_Bind.bind(Control_Bind.bindArray)(Data_Functor.map(Data_Functor.functorArray)(Data_Int.toNumber)(Data_Array.range(-3)(3)))(function (v2) {
                  var r = $$Math.abs(v) + $$Math.abs(v1) + $$Math.abs(v2);
                  var alpha = $$Math.sin(v + t * 2.1) + $$Math.sin(v1 + t * 2.2) + $$Math.cos(v2 + t * 2.3) + r / 7.5;
                  return Control_Bind.bind(Control_Bind.bindArray)(Control_MonadZero.guard(Control_MonadZero.monadZeroArray)(alpha > 0.5))(function () {
                      return cube(v * s)(v * s + s)(v1 * s)(v1 * s + s)(v2 * s)(v2 * s + s)(alpha);
                  });
              });
          });
      });
  };
  var backToFront = function (f) {
      return function (s) {
          var splitZ = function (o) {
              return function (z) {
                  if (o.z.min >= z) {
                      return Back.value;
                  };
                  if (o.z.max <= z) {
                      return Front.value;
                  };
                  if (Data_Boolean.otherwise) {
                      return new Split((function () {
                          var $27 = {};
                          for (var $28 in o) {
                              if (o.hasOwnProperty($28)) {
                                  $27[$28] = o[$28];
                              };
                          };
                          $27.z = {
                              min: o.z.min, 
                              max: z
                          };
                          return $27;
                      })(), (function () {
                          var $30 = {};
                          for (var $31 in o) {
                              if (o.hasOwnProperty($31)) {
                                  $30[$31] = o[$31];
                              };
                          };
                          $30.z = {
                              max: o.z.max, 
                              min: z
                          };
                          return $30;
                      })());
                  };
                  throw new Error("Failed pattern match at Main line 73, column 3 - line 76, column 70: " + [ o.constructor.name, z.constructor.name ]);
              };
          };
          var splitY = function (o) {
              return function (y) {
                  if (o.y.min >= y) {
                      return Front.value;
                  };
                  if (o.y.max <= y) {
                      return Back.value;
                  };
                  if (Data_Boolean.otherwise) {
                      return new Split((function () {
                          var $35 = {};
                          for (var $36 in o) {
                              if (o.hasOwnProperty($36)) {
                                  $35[$36] = o[$36];
                              };
                          };
                          $35.y = {
                              max: o.y.max, 
                              min: y
                          };
                          return $35;
                      })(), (function () {
                          var $38 = {};
                          for (var $39 in o) {
                              if (o.hasOwnProperty($39)) {
                                  $38[$39] = o[$39];
                              };
                          };
                          $38.y = {
                              min: o.y.min, 
                              max: y
                          };
                          return $38;
                      })());
                  };
                  throw new Error("Failed pattern match at Main line 67, column 3 - line 70, column 70: " + [ o.constructor.name, y.constructor.name ]);
              };
          };
          var splitX = function (o) {
              return function (x) {
                  if (o.x.min >= x) {
                      return Front.value;
                  };
                  if (o.x.max <= x) {
                      return Back.value;
                  };
                  if (Data_Boolean.otherwise) {
                      return new Split((function () {
                          var $43 = {};
                          for (var $44 in o) {
                              if (o.hasOwnProperty($44)) {
                                  $43[$44] = o[$44];
                              };
                          };
                          $43.x = {
                              max: o.x.max, 
                              min: x
                          };
                          return $43;
                      })(), (function () {
                          var $46 = {};
                          for (var $47 in o) {
                              if (o.hasOwnProperty($47)) {
                                  $46[$47] = o[$47];
                              };
                          };
                          $46.x = {
                              min: o.x.min, 
                              max: x
                          };
                          return $46;
                      })());
                  };
                  throw new Error("Failed pattern match at Main line 61, column 3 - line 64, column 70: " + [ o.constructor.name, x.constructor.name ]);
              };
          };
          var splitOn = function (v) {
              return function (v1) {
                  if (v instanceof XY && v1 instanceof XY) {
                      if (v.value0.z >= v1.value0.z) {
                          return Back.value;
                      };
                      if (Data_Boolean.otherwise) {
                          return Front.value;
                      };
                  };
                  if (v instanceof XY && v1 instanceof YZ) {
                      return Data_Functor.map(functorSplit)(XY.create)(splitX(v.value0)(v1.value0.x));
                  };
                  if (v instanceof XY && v1 instanceof ZX) {
                      return Data_Functor.map(functorSplit)(XY.create)(splitY(v.value0)(v1.value0.y));
                  };
                  if (v instanceof YZ && v1 instanceof XY) {
                      return Data_Functor.map(functorSplit)(YZ.create)(splitZ(v.value0)(v1.value0.z));
                  };
                  if (v instanceof YZ && v1 instanceof YZ) {
                      if (v.value0.x >= v1.value0.x) {
                          return Front.value;
                      };
                      if (Data_Boolean.otherwise) {
                          return Back.value;
                      };
                  };
                  if (v instanceof YZ && v1 instanceof ZX) {
                      return Data_Functor.map(functorSplit)(YZ.create)(splitY(v.value0)(v1.value0.y));
                  };
                  if (v instanceof ZX && v1 instanceof XY) {
                      return Data_Functor.map(functorSplit)(ZX.create)(splitZ(v.value0)(v1.value0.z));
                  };
                  if (v instanceof ZX && v1 instanceof YZ) {
                      return Data_Functor.map(functorSplit)(ZX.create)(splitX(v.value0)(v1.value0.x));
                  };
                  if (v instanceof ZX && v1 instanceof ZX) {
                      if (v.value0.y >= v1.value0.y) {
                          return Front.value;
                      };
                      if (Data_Boolean.otherwise) {
                          return Back.value;
                      };
                  };
                  throw new Error("Failed pattern match at Main line 47, column 3 - line 48, column 49: " + [ v.constructor.name, v1.constructor.name ]);
              };
          };
          var go = function (v) {
              if (v instanceof Data_List_Types.Nil) {
                  return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
              };
              if (v instanceof Data_List_Types.Cons) {
                  return function __do() {
                      go(Control_Bind.bind(Data_List_Types.bindList)(v.value1)(function (v1) {
                          var $71 = splitOn(v1)(v.value0);
                          if ($71 instanceof Back) {
                              return Control_Applicative.pure(Data_List_Types.applicativeList)(v1);
                          };
                          if ($71 instanceof Split) {
                              return Control_Applicative.pure(Data_List_Types.applicativeList)($71.value1);
                          };
                          return Data_List_Types.Nil.value;
                      }))();
                      f(v.value0)();
                      return go(Control_Bind.bind(Data_List_Types.bindList)(v.value1)(function (v1) {
                          var $75 = splitOn(v1)(v.value0);
                          if ($75 instanceof Front) {
                              return Control_Applicative.pure(Data_List_Types.applicativeList)(v1);
                          };
                          if ($75 instanceof Split) {
                              return Control_Applicative.pure(Data_List_Types.applicativeList)($75.value0);
                          };
                          return Data_List_Types.Nil.value;
                      }))();
                  };
              };
              throw new Error("Failed pattern match at Main line 28, column 1 - line 76, column 70: " + [ v.constructor.name ]);
          };
          return go(Data_List.fromFoldable(Data_Foldable.foldableArray)(s));
      };
  };
  var main = (function () {
      var render = function (ctx) {
          return function (t) {
              return function (r) {
                  var theta = $$Math.pi / 4.0 + ($$Math.pi / 12.0) * $$Math.sin(t * 0.11);
                  var s = $$Math.sin(theta);
                  var c = $$Math.cos(theta);
                  var project = function (o) {
                      return {
                          x: (500.0 + o.x * c) - o.y * s, 
                          y: 350.0 + o.x * s + o.y * c + o.z
                      };
                  };
                  var l2 = function (ctx1) {
                      return function (f) {
                          return function (p) {
                              var o = project(p);
                              return f(ctx1)(o.x)(o.y);
                          };
                      };
                  };
                  return function __do() {
                      (function () {
                          if (r instanceof XY) {
                              return Graphics_Canvas.setFillStyle("rgba(48, 196, 255, " + (Data_Show.show(Data_Show.showNumber)(r.value0.a) + ")"))(ctx);
                          };
                          if (r instanceof YZ) {
                              return Graphics_Canvas.setFillStyle("rgba(24, 144, 200, " + (Data_Show.show(Data_Show.showNumber)(r.value0.a) + ")"))(ctx);
                          };
                          if (r instanceof ZX) {
                              return Graphics_Canvas.setFillStyle("rgba(0 , 128, 196, " + (Data_Show.show(Data_Show.showNumber)(r.value0.a) + ")"))(ctx);
                          };
                          throw new Error("Failed pattern match at Main line 138, column 5 - line 141, column 74: " + [ r.constructor.name ]);
                      })()();
                      var $84 = toPoints(r);
                      if ($84.length === 4) {
                          return Data_Functor["void"](Control_Monad_Eff.functorEff)(function __do() {
                              Graphics_Canvas.beginPath(ctx)();
                              l2(ctx)(Graphics_Canvas.moveTo)($84[0])();
                              l2(ctx)(Graphics_Canvas.lineTo)($84[1])();
                              l2(ctx)(Graphics_Canvas.lineTo)($84[2])();
                              l2(ctx)(Graphics_Canvas.lineTo)($84[3])();
                              Graphics_Canvas.closePath(ctx)();
                              return Graphics_Canvas.fill(ctx)();
                          })();
                      };
                      return Partial_Unsafe.unsafeCrashWith("bad points")();
                  };
              };
          };
      };
      return function __do() {
          var v = Graphics_Canvas.getCanvasElementById("canvas")();
          var canvas = Data_Maybe["fromMaybe'"](function (v1) {
              return Partial_Unsafe.unsafeCrashWith("no canvas element");
          })(v);
          var v1 = Graphics_Canvas.getContext2D(canvas)();
          return $foreign.atFps(30.0)(function (t) {
              return function __do() {
                  Graphics_Canvas.clearRect(v1)({
                      x: 0.0, 
                      y: 0.0, 
                      w: 1000.0, 
                      h: 1000.0
                  })();
                  return backToFront(render(v1)(t))(scene(t))();
              };
          })();
      };
  })();
  exports["XY"] = XY;
  exports["YZ"] = YZ;
  exports["ZX"] = ZX;
  exports["Front"] = Front;
  exports["Back"] = Back;
  exports["Split"] = Split;
  exports["backToFront"] = backToFront;
  exports["cube"] = cube;
  exports["main"] = main;
  exports["scene"] = scene;
  exports["toPoints"] = toPoints;
  exports["functorSplit"] = functorSplit;
  exports["atFps"] = $foreign.atFps;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
